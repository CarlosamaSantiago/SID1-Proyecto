-- Creación Base De Datos del Gymnasio
-- DDL
-- Eliminar tablas en orden inverso a su creación (primero las más dependientes)
DROP TABLE ACTIVACIONES_MENSUALES;
DROP TABLE ASISTENCIAS;
DROP TABLE MANTENIMIENTOS;
DROP TABLE EVALUACIONES_FISICAS;
DROP TABLE PRODUCTOS_VENDIDOS;
DROP TABLE PRODUCTOS_SURTIDOS;
DROP TABLE CONTRATOS;
DROP TABLE PAGOS_MEMBRESIA;
DROP TABLE VENTAS;
DROP TABLE PEDIDOS;
DROP TABLE IMPLEMENTOS;
DROP TABLE PLANES_ENTRENAMIENTO;
DROP TABLE TECNICOS;
DROP TABLE ENTRENADORES;
DROP TABLE RECEPCIONISTAS;
DROP TABLE PRODUCTOS;
DROP TABLE PROVEEDORES;
DROP TABLE CLIENTES CASCADE CONSTRAINTS;



-- Crear tabla CLIENTES
CREATE TABLE CLIENTES (
    idCliente VARCHAR2(10 CHAR) NOT NULL,
    nombreCliente VARCHAR2(30 CHAR),
    telefonoCliente VARCHAR2(10 CHAR),
    correoCliente VARCHAR2(30 CHAR),
    sexoCliente VARCHAR2(9 CHAR)
);

ALTER TABLE CLIENTES
    ADD CONSTRAINT CLIENTE_PK PRIMARY KEY (idCliente);

-- Crear tabla PROVEEDORES
CREATE TABLE PROVEEDORES (
    idProveedor VARCHAR2(10 CHAR) NOT NULL,
    condicionesDePago VARCHAR2(30 CHAR),
    telefonoProveedor VARCHAR2(30 CHAR),
    correoProveedor VARCHAR2(30 CHAR)
);

ALTER TABLE PROVEEDORES
    ADD CONSTRAINT PROVEEDOR_PK PRIMARY KEY (idProveedor);

-- Crear tabla PRODUCTOS
CREATE TABLE PRODUCTOS (
    idProducto VARCHAR2(10) NOT NULL,
    precioProducto NUMBER(2),
    nombreProducto VARCHAR2(20 CHAR),
    stock INTEGER,
    marcaProducto VARCHAR2(10),
    descripcionProducto VARCHAR2(10)
);

ALTER TABLE PRODUCTOS
    ADD CONSTRAINT PRODUCTO_PK PRIMARY KEY (idProducto);

-- Crear tabla RECEPCIONISTAS
CREATE TABLE RECEPCIONISTAS (
    idRecepcionista VARCHAR2(10 CHAR) NOT NULL,
    nombreRecepcionista VARCHAR2(30 CHAR),
    horarioTrabajo DATE,
    salario NUMBER(2)
);

ALTER TABLE RECEPCIONISTAS
    ADD CONSTRAINT RECEPCIONISTA_PK PRIMARY KEY (idRecepcionista);
    
-- Crear tabla ENTRENADORES
CREATE TABLE ENTRENADORES (
    idEntrenador VARCHAR2(10 CHAR) NOT NULL,
    nombreEntrenador VARCHAR2(30 CHAR),
    reputacion INTEGER,
    costoHora NUMBER
);

ALTER TABLE ENTRENADORES
    ADD CONSTRAINT ENTRENADOR_PK PRIMARY KEY (idEntrenador);

-- Crear tabla TECNICOS
CREATE TABLE TECNICOS (
    idTecnico VARCHAR2(10 CHAR) NOT NULL,
    nombreTecnico VARCHAR2(10 CHAR),
    costoHora NUMBER,
    tituloAcademico BLOB,
    telefonoTecnico VARCHAR2(10 CHAR)
);

ALTER TABLE TECNICOS
    ADD CONSTRAINT TECNICO_PK PRIMARY KEY (idTecnico);
    
-- Crear tabla PLANES_ENTRENAMIENTO
CREATE TABLE PLANES_ENTRENAMIENTO (
    idPlan VARCHAR2(10 CHAR) NOT NULL,
    objetivoPlan VARCHAR2(100 CHAR),
    duracionPlan DATE,
    costoPlan NUMBER(2),
    observaciones VARCHAR2(100 CHAR)
);

ALTER TABLE PLANES_ENTRENAMIENTO
    ADD CONSTRAINT PLAN_ENTRENAMIENTO_PK PRIMARY KEY (idPlan);
    
-- Crear tabla IMPLEMENTOS
CREATE TABLE IMPLEMENTOS (
    idImplemento VARCHAR2(10 CHAR) NOT NULL,
    nombreImplemento VARCHAR2(20),
    inicioServicio DATE,
    finServicio DATE
);

ALTER TABLE IMPLEMENTOS
    ADD CONSTRAINT IMPLEMENTO_PK PRIMARY KEY (idImplemento);
    
-- Crear tabla PEDIDOS
CREATE TABLE PEDIDOS (
    idPedido VARCHAR2(10 CHAR) NOT NULL,
    fechaDePetición DATE,
    estadoPedido VARCHAR2(10 CHAR),
    fechaEntrega DATE,
    idProveedor VARCHAR2(10 CHAR)
);

ALTER TABLE PEDIDOS
    ADD CONSTRAINT PEDIDO_PK PRIMARY KEY (idPedido);

ALTER TABLE PEDIDOS
    ADD CONSTRAINT PEDIDO_PROVEEDOR_FK FOREIGN KEY (idProveedor)
        REFERENCES PROVEEDORES (idProveedor);
        
-- Crear tabla VENTAS
CREATE TABLE VENTAS (
    idVenta VARCHAR2(10 CHAR) NOT NULL,
    fechaVenta VARCHAR2(10 CHAR),
    idCliente VARCHAR2(10 CHAR),
    idRecepcionista VARCHAR2(10 CHAR)
);

ALTER TABLE VENTAS
    ADD CONSTRAINT VENTA_PK PRIMARY KEY (idVenta);

ALTER TABLE VENTAS
    ADD CONSTRAINT VENTA_CLIENTE_FK FOREIGN KEY (idCliente)
        REFERENCES CLIENTES (idCliente);

ALTER TABLE VENTAS
    ADD CONSTRAINT VENTA_RECEPCIONISTA_FK FOREIGN KEY (idRecepcionista)
        REFERENCES RECEPCIONISTAS (idRecepcionista);
        
-- Crear tabla PAGOS_MEMBRESIA
CREATE TABLE PAGOS_MEMBRESIA (
    idPago VARCHAR2(10 CHAR) NOT NULL,
    fechaPago DATE,
    valorPago NUMBER(2),
    estadoPago VARCHAR2(10 CHAR),
    metodoPago VARCHAR2(10 CHAR)
);

ALTER TABLE PAGOS_MEMBRESIA
    ADD CONSTRAINT PAGO_MEMBRESIA_PK PRIMARY KEY (idPago);
    
-- Crear tabla CONTRATOS
CREATE TABLE CONTRATOS (
    idContrato VARCHAR2(10) NOT NULL,
    fechaInicio DATE,
    fechaCierre DATE,
    idCliente VARCHAR2(10 CHAR),
    idPlan VARCHAR2(10 CHAR)
);

ALTER TABLE CONTRATOS
    ADD CONSTRAINT CONTRATO_PK PRIMARY KEY (idContrato);

ALTER TABLE CONTRATOS
    ADD CONSTRAINT CONTRATO_CLIENTE_FK FOREIGN KEY (idCliente)
        REFERENCES CLIENTES (idCliente);

ALTER TABLE CONTRATOS
    ADD CONSTRAINT CONTRATO_PLAN_ENTRENAMIENTO_FK FOREIGN KEY (idPlan)
        REFERENCES PLANES_ENTRENAMIENTO (idPlan);
        
-- Crear tabla PRODUCTOS_SURTIDOS
CREATE TABLE PRODUCTOS_SURTIDOS (
    idSurtidos VARCHAR2(10) NOT NULL,
    cantidadProducto INTEGER,
    idProducto VARCHAR2(10),
    idPedido VARCHAR2(10 CHAR)
);

ALTER TABLE PRODUCTOS_SURTIDOS
    ADD CONSTRAINT PRODUCTO_SURTIDO_PK PRIMARY KEY (idSurtidos);

ALTER TABLE PRODUCTOS_SURTIDOS
    ADD CONSTRAINT PRODUCTO_SURTIDO_PRODUCTO_FK FOREIGN KEY (idProducto)
        REFERENCES PRODUCTOS (idProducto);

ALTER TABLE PRODUCTOS_SURTIDOS
    ADD CONSTRAINT PRODUCTO_SURTIDO_PEDIDO_FK FOREIGN KEY (idPedido)
        REFERENCES PEDIDOS (idPedido);

-- Crear tabla PRODUCTOS_VENDIDOS
CREATE TABLE PRODUCTOS_VENDIDOS (
    idVendidos VARCHAR2(10) NOT NULL,
    idVenta VARCHAR2(10 CHAR),
    cantidadTotal INTEGER,
    idProducto VARCHAR2(10)
);

ALTER TABLE PRODUCTOS_VENDIDOS
    ADD CONSTRAINT PRODUCTO_VENDIDO_PK PRIMARY KEY (idVendidos);

ALTER TABLE PRODUCTOS_VENDIDOS
    ADD CONSTRAINT PRODUCTO_VENDIDO_VENTA_FK FOREIGN KEY (idVenta)
        REFERENCES VENTAS (idVenta);

ALTER TABLE PRODUCTOS_VENDIDOS
    ADD CONSTRAINT PRODUCTO_VENDIDO_PRODUCTO_FK FOREIGN KEY (idProducto)
        REFERENCES PRODUCTOS (idProducto);
        
-- Crear tabla EVALUACIONES_FISICAS
CREATE TABLE EVALUACIONES_FISICAS (
    idEvaluación VARCHAR2(10 CHAR) NOT NULL,
    fechaEvaluacion DATE,
    peso FLOAT(2),
    estatura NUMBER(2),
    IMC FLOAT(2),
    porcentajeGrasa FLOAT(2),
    observaciones VARCHAR2(100),
    idCliente VARCHAR2(10 CHAR),
    idEntrenador VARCHAR2(10 CHAR)
);

ALTER TABLE EVALUACIONES_FISICAS
    ADD CONSTRAINT EVALUACION_FISICA_PK PRIMARY KEY (idEvaluación);

ALTER TABLE EVALUACIONES_FISICAS
    ADD CONSTRAINT EVALUACION_FISICA_CLIENTE_FK FOREIGN KEY (idCliente)
        REFERENCES CLIENTES (idCliente);

ALTER TABLE EVALUACIONES_FISICAS
    ADD CONSTRAINT EVALUACION_FISICA_ENTRENADOR_FK FOREIGN KEY (idEntrenador)
        REFERENCES ENTRENADORES (idEntrenador);

-- Crear tabla MANTENIMIENTOS
CREATE TABLE MANTENIMIENTOS (
    idMantenimiento VARCHAR2(10 CHAR) NOT NULL,
    fechaMantenimiento DATE,
    observacionesMantenimiento VARCHAR2(100 CHAR),
    idImplemento VARCHAR2(10 CHAR),
    idTecnico VARCHAR2(10 CHAR)
);

ALTER TABLE MANTENIMIENTOS
    ADD CONSTRAINT MANTENIMIENTO_PK PRIMARY KEY (idMantenimiento);

ALTER TABLE MANTENIMIENTOS
    ADD CONSTRAINT MANTENIMIENTO_IMPLEMENTO_FK FOREIGN KEY (idImplemento)
        REFERENCES IMPLEMENTOS (idImplemento);

ALTER TABLE MANTENIMIENTOS
    ADD CONSTRAINT MANTENIMIENTO_TECNICO_FK FOREIGN KEY (idTecnico)
        REFERENCES TECNICOS (idTecnico);

-- Crear tabla ASISTENCIAS
CREATE TABLE ASISTENCIAS (
    idAsistencia VARCHAR2(10 CHAR) NOT NULL,
    fechaAsistencia DATE,
    horaLlegada DATE,
    horaSalida DATE,
    idCliente VARCHAR2(10 CHAR)
);

ALTER TABLE ASISTENCIAS
    ADD CONSTRAINT ASISTENCIA_PK PRIMARY KEY (idAsistencia);

ALTER TABLE ASISTENCIAS
    ADD CONSTRAINT ASISTENCIA_CLIENTE_FK FOREIGN KEY (idCliente)
        REFERENCES CLIENTES (idCliente);
    
-- Crear tabla ACTIVACIONES_MENSUALES
CREATE TABLE ACTIVACIONES_MENSUALES (
    idActivacion VARCHAR2(10 CHAR) NOT NULL,
    idContrato VARCHAR2(10),
    idPago VARCHAR2(10 CHAR)
);

ALTER TABLE ACTIVACIONES_MENSUALES
    ADD CONSTRAINT ACTIVACION_MENSUAL_PK PRIMARY KEY (idActivacion);

ALTER TABLE ACTIVACIONES_MENSUALES
    ADD CONSTRAINT ACTIVACION_MENSUAL_CONTRATO_FK FOREIGN KEY (idContrato)
        REFERENCES CONTRATOS (idContrato);

ALTER TABLE ACTIVACIONES_MENSUALES
    ADD CONSTRAINT ACTIVACION_MENSUAL_PAGO_MEMBRESIA_FK FOREIGN KEY (idPago)
        REFERENCES PAGOS_MEMBRESIA (idPago);

-- Inserción de Datos
-- DML:
-- CLIENTES
INSERT INTO CLIENTES VALUES ('CLI001', 'María González', '5551234567', 'maria.g@email.com', 'Femenino');
INSERT INTO CLIENTES VALUES ('CLI002', 'Carlos Mendoza', '5552345678', 'carlos.m@email.com', 'Masculino');
INSERT INTO CLIENTES VALUES ('CLI003', 'Ana López', '5553456789', 'ana.l@email.com', 'Femenino');
INSERT INTO CLIENTES VALUES ('CLI004', 'Jorge Ramírez', '5554567890', 'jorge.r@email.com', 'Masculino');
INSERT INTO CLIENTES VALUES ('CLI005', 'Luisa Fernández', '5555678901', 'luisa.f@email.com', 'Femenino');
-- PROVEEDORES
INSERT INTO PROVEEDORES VALUES ('PROV001', '30 días neto', '5559876543', 'contacto@suplementos.com');
INSERT INTO PROVEEDORES VALUES ('PROV002', 'Pago contra entrega', '5558765432', 'ventas@equiposgym.com');
INSERT INTO PROVEEDORES VALUES ('PROV003', '15 días neto', '5557654321', 'info@bebidasenergia.com');
-- PRODUCTOS
INSERT INTO PRODUCTOS VALUES ('PROD001', 25, 'Proteína Whey', 50, 'Optimum', 'Suplemento');
INSERT INTO PRODUCTOS VALUES ('PROD002', 15, 'Creatina', 30, 'MuscleTech', 'Suplemento');
INSERT INTO PRODUCTOS VALUES ('PROD003', 10, 'Shaker', 100, 'Generic', 'Accesorio');
INSERT INTO PRODUCTOS VALUES ('PROD004', 5, 'Toalla', 75, 'Generic', 'Accesorio');
INSERT INTO PRODUCTOS VALUES ('PROD005', 3, 'Botella Agua', 120, 'Sport', 'Accesorio');
-- RECEPCIONISTAS
INSERT INTO RECEPCIONISTAS VALUES ('REC001', 'Sofía Jiménez', TO_DATE('08:00:00', 'HH24:MI:SS'), 1200);
INSERT INTO RECEPCIONISTAS VALUES ('REC002', 'Pedro Vargas', TO_DATE('14:00:00', 'HH24:MI:SS'), 1100);
-- ENTRENADORES
INSERT INTO ENTRENADORES VALUES ('ENT001', 'Roberto Castro', 5, 30);
INSERT INTO ENTRENADORES VALUES ('ENT002', 'Laura Méndez', 4, 25);
INSERT INTO ENTRENADORES VALUES ('ENT003', 'Miguel Ángel Soto', 3, 20);
-- TECNICOS
INSERT INTO TECNICOS VALUES ('TEC001', 'Juan Pérez', 15, EMPTY_BLOB(), '5551112233');
INSERT INTO TECNICOS VALUES ('TEC002', 'Adriana Ruiz', 18, EMPTY_BLOB(), '5552223344');
-- PLANES_ENTRENAMIENTO
INSERT INTO PLANES_ENTRENAMIENTO VALUES ('PLAN001', 'Pérdida de peso', TO_DATE('30/06/2023', 'DD/MM/YYYY'), 150, '3 sesiones semanales');
INSERT INTO PLANES_ENTRENAMIENTO VALUES ('PLAN002', 'Ganancia muscular', TO_DATE('31/12/2023', 'DD/MM/YYYY'), 200, '4 sesiones semanales');
INSERT INTO PLANES_ENTRENAMIENTO VALUES ('PLAN003', 'Mantenimiento', TO_DATE('31/03/2023', 'DD/MM/YYYY'), 100, '2 sesiones semanales');
-- IMPLEMENTOS
INSERT INTO IMPLEMENTOS VALUES ('IMP001', 'Mancuernas', TO_DATE('01/01/2022', 'DD/MM/YYYY'), TO_DATE('31/12/2025', 'DD/MM/YYYY'));
INSERT INTO IMPLEMENTOS VALUES ('IMP002', 'Bicicleta estática', TO_DATE('15/03/2022', 'DD/MM/YYYY'), TO_DATE('14/03/2027', 'DD/MM/YYYY'));
INSERT INTO IMPLEMENTOS VALUES ('IMP003', 'Banco de pesas', TO_DATE('10/05/2021', 'DD/MM/YYYY'), TO_DATE('09/05/2026', 'DD/MM/YYYY'));
-- PEDIDOS
INSERT INTO PEDIDOS VALUES ('PED001', TO_DATE('10/01/2023', 'DD/MM/YYYY'), 'Entregado', TO_DATE('15/01/2023', 'DD/MM/YYYY'), 'PROV001');
INSERT INTO PEDIDOS VALUES ('PED002', TO_DATE('05/02/2023', 'DD/MM/YYYY'), 'Pendiente', NULL, 'PROV002');
-- VENTAS
INSERT INTO VENTAS VALUES ('VEN001', '10/01/2023', 'CLI001', 'REC001');
INSERT INTO VENTAS VALUES ('VEN002', '15/01/2023', 'CLI003', 'REC002');
-- PAGOS_MEMBRESIA
INSERT INTO PAGOS_MEMBRESIA VALUES ('PAG001', TO_DATE('05/01/2023', 'DD/MM/YYYY'), 150, 'Completo', 'Tarjeta');
INSERT INTO PAGOS_MEMBRESIA VALUES ('PAG002', TO_DATE('10/01/2023', 'DD/MM/YYYY'), 200, 'Completo', 'Efectivo');
-- CONTRATOS
INSERT INTO CONTRATOS VALUES ('CONT001', TO_DATE('01/01/2023', 'DD/MM/YYYY'), TO_DATE('30/06/2023', 'DD/MM/YYYY'), 'CLI001', 'PLAN001');
INSERT INTO CONTRATOS VALUES ('CONT002', TO_DATE('10/01/2023', 'DD/MM/YYYY'), TO_DATE('31/12/2023', 'DD/MM/YYYY'), 'CLI002', 'PLAN002');
-- PRODUCTOS_SURTIDOS
INSERT INTO PRODUCTOS_SURTIDOS VALUES ('SUR001', 20, 'PROD001', 'PED001');
INSERT INTO PRODUCTOS_SURTIDOS VALUES ('SUR002', 50, 'PROD003', 'PED001');
-- PRODUCTOS_VENDIDOS
INSERT INTO PRODUCTOS_VENDIDOS VALUES ('VEND001', 'VEN001', 2, 'PROD001');
INSERT INTO PRODUCTOS_VENDIDOS VALUES ('VEND002', 'VEN002', 1, 'PROD003');
-- EVALUACIONES_FISICAS
INSERT INTO EVALUACIONES_FISICAS VALUES ('EVAL001', TO_DATE('15/01/2023', 'DD/MM/YYYY'), 68.5, 165, 25.2, 22.5, 'Buen estado físico', 'CLI001', 'ENT001');
INSERT INTO EVALUACIONES_FISICAS VALUES ('EVAL002', TO_DATE('20/01/2023', 'DD/MM/YYYY'), 75.0, 170, 25.9, 24.0, 'Necesita mejorar resistencia', 'CLI002', 'ENT002');
-- MANTENIMIENTOS
INSERT INTO MANTENIMIENTOS VALUES ('MANT001', TO_DATE('05/01/2023', 'DD/MM/YYYY'), 'Lubricación y ajuste', 'IMP002', 'TEC001');
INSERT INTO MANTENIMIENTOS VALUES ('MANT002', TO_DATE('12/01/2023', 'DD/MM/YYYY'), 'Cambio de piezas gastadas', 'IMP003', 'TEC002');
-- ASISTENCIAS
INSERT INTO ASISTENCIAS VALUES ('ASIS001', TO_DATE('10/01/2023', 'DD/MM/YYYY'), TO_DATE('10/01/2023 08:30:00', 'DD/MM/YYYY HH24:MI:SS'), TO_DATE('10/01/2023 10:15:00', 'DD/MM/YYYY HH24:MI:SS'), 'CLI001');
INSERT INTO ASISTENCIAS VALUES ('ASIS002', TO_DATE('12/01/2023', 'DD/MM/YYYY'), TO_DATE('12/01/2023 17:00:00', 'DD/MM/YYYY HH24:MI:SS'), TO_DATE('12/01/2023 18:45:00', 'DD/MM/YYYY HH24:MI:SS'), 'CLI002');
-- ACTIVACIONES_MENSUALES
INSERT INTO ACTIVACIONES_MENSUALES VALUES ('ACT001', 'CONT001', 'PAG001');
INSERT INTO ACTIVACIONES_MENSUALES VALUES ('ACT002', 'CONT002', 'PAG002');

--2.Consultas:
--a) Clientes con planes de entrenamiento:
SELECT c.nombreCliente, p.objetivoPlan, p.duracionPlan
FROM CLIENTES c
JOIN CONTRATOS co ON c.idCliente = co.idCliente
JOIN PLANES_ENTRENAMIENTO p ON co.idPlan = p.idPlan;
-- b) Productos más vendidos
SELECT pr.nombreProducto, SUM(pv.cantidadTotal) as total_vendido
FROM PRODUCTOS_VENDIDOS pv
JOIN PRODUCTOS pr ON pv.idProducto = pr.idProducto
GROUP BY pr.nombreProducto
ORDER BY total_vendido DESC;
--c) Asistencia por Clientes
SELECT c.nombreCliente, COUNT(a.idAsistencia) as dias_asistidos
FROM CLIENTES c
LEFT JOIN ASISTENCIAS a ON c.idCliente = a.idCliente
GROUP BY c.nombreCliente
ORDER BY dias_asistidos DESC;


